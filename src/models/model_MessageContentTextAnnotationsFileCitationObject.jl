# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MessageContentTextAnnotationsFileCitationObject
A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the \&quot;retrieval\&quot; tool to search files.

    MessageContentTextAnnotationsFileCitationObject(;
        type=nothing,
        text=nothing,
        file_citation=nothing,
        start_index=nothing,
        end_index=nothing,
    )

    - type::String : Always &#x60;file_citation&#x60;.
    - text::String : The text in the message content that needs to be replaced.
    - file_citation::MessageContentTextAnnotationsFileCitationObjectFileCitation
    - start_index::Int64
    - end_index::Int64
"""
Base.@kwdef mutable struct MessageContentTextAnnotationsFileCitationObject <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    text::Union{Nothing, String} = nothing
    file_citation = nothing # spec type: Union{ Nothing, MessageContentTextAnnotationsFileCitationObjectFileCitation }
    start_index::Union{Nothing, Int64} = nothing
    end_index::Union{Nothing, Int64} = nothing

    function MessageContentTextAnnotationsFileCitationObject(type, text, file_citation, start_index, end_index, )
        OpenAPI.validate_property(MessageContentTextAnnotationsFileCitationObject, Symbol("type"), type)
        OpenAPI.validate_property(MessageContentTextAnnotationsFileCitationObject, Symbol("text"), text)
        OpenAPI.validate_property(MessageContentTextAnnotationsFileCitationObject, Symbol("file_citation"), file_citation)
        OpenAPI.validate_property(MessageContentTextAnnotationsFileCitationObject, Symbol("start_index"), start_index)
        OpenAPI.validate_property(MessageContentTextAnnotationsFileCitationObject, Symbol("end_index"), end_index)
        return new(type, text, file_citation, start_index, end_index, )
    end
end # type MessageContentTextAnnotationsFileCitationObject

const _property_types_MessageContentTextAnnotationsFileCitationObject = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("text")=>"String", Symbol("file_citation")=>"MessageContentTextAnnotationsFileCitationObjectFileCitation", Symbol("start_index")=>"Int64", Symbol("end_index")=>"Int64", )
OpenAPI.property_type(::Type{ MessageContentTextAnnotationsFileCitationObject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MessageContentTextAnnotationsFileCitationObject[name]))}

function check_required(o::MessageContentTextAnnotationsFileCitationObject)
    o.type === nothing && (return false)
    o.text === nothing && (return false)
    o.file_citation === nothing && (return false)
    o.start_index === nothing && (return false)
    o.end_index === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MessageContentTextAnnotationsFileCitationObject }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "MessageContentTextAnnotationsFileCitationObject", :enum, val, ["file_citation"])
    end
    if name === Symbol("start_index")
        OpenAPI.validate_param(name, "MessageContentTextAnnotationsFileCitationObject", :minimum, val, 0, false)
    end
    if name === Symbol("end_index")
        OpenAPI.validate_param(name, "MessageContentTextAnnotationsFileCitationObject", :minimum, val, 0, false)
    end
end
