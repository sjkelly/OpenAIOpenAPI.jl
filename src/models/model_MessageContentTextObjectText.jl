# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MessageContentTextObject_text

    MessageContentTextObjectText(;
        value=nothing,
        annotations=nothing,
    )

    - value::String : The data that makes up the text.
    - annotations::Vector{MessageContentTextObjectTextAnnotationsInner}
"""
Base.@kwdef mutable struct MessageContentTextObjectText <: OpenAPI.APIModel
    value::Union{Nothing, String} = nothing
    annotations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MessageContentTextObjectTextAnnotationsInner} }

    function MessageContentTextObjectText(value, annotations, )
        OpenAPI.validate_property(MessageContentTextObjectText, Symbol("value"), value)
        OpenAPI.validate_property(MessageContentTextObjectText, Symbol("annotations"), annotations)
        return new(value, annotations, )
    end
end # type MessageContentTextObjectText

const _property_types_MessageContentTextObjectText = Dict{Symbol,String}(Symbol("value")=>"String", Symbol("annotations")=>"Vector{MessageContentTextObjectTextAnnotationsInner}", )
OpenAPI.property_type(::Type{ MessageContentTextObjectText }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MessageContentTextObjectText[name]))}

function check_required(o::MessageContentTextObjectText)
    o.value === nothing && (return false)
    o.annotations === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MessageContentTextObjectText }, name::Symbol, val)
end
