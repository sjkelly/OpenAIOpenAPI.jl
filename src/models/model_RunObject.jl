# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RunObject
Represents an execution run on a [thread](/docs/api-reference/threads).

    RunObject(;
        id=nothing,
        object=nothing,
        created_at=nothing,
        thread_id=nothing,
        assistant_id=nothing,
        status=nothing,
        required_action=nothing,
        last_error=nothing,
        expires_at=nothing,
        started_at=nothing,
        cancelled_at=nothing,
        failed_at=nothing,
        completed_at=nothing,
        model=nothing,
        instructions=nothing,
        tools=nothing,
        file_ids=nothing,
        metadata=nothing,
    )

    - id::String : The identifier, which can be referenced in API endpoints.
    - object::String : The object type, which is always &#x60;thread.run&#x60;.
    - created_at::Int64 : The Unix timestamp (in seconds) for when the run was created.
    - thread_id::String : The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.
    - assistant_id::String : The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.
    - status::String : The status of the run, which can be either &#x60;queued&#x60;, &#x60;in_progress&#x60;, &#x60;requires_action&#x60;, &#x60;cancelling&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;.
    - required_action::RunObjectRequiredAction
    - last_error::RunObjectLastError
    - expires_at::Int64 : The Unix timestamp (in seconds) for when the run will expire.
    - started_at::Int64 : The Unix timestamp (in seconds) for when the run was started.
    - cancelled_at::Int64 : The Unix timestamp (in seconds) for when the run was cancelled.
    - failed_at::Int64 : The Unix timestamp (in seconds) for when the run failed.
    - completed_at::Int64 : The Unix timestamp (in seconds) for when the run was completed.
    - model::String : The model that the [assistant](/docs/api-reference/assistants) used for this run.
    - instructions::String : The instructions that the [assistant](/docs/api-reference/assistants) used for this run.
    - tools::Vector{AssistantObjectToolsInner} : The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.
    - file_ids::Vector{String} : The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.
    - metadata::Any : Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
"""
Base.@kwdef mutable struct RunObject <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    object::Union{Nothing, String} = nothing
    created_at::Union{Nothing, Int64} = nothing
    thread_id::Union{Nothing, String} = nothing
    assistant_id::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    required_action = nothing # spec type: Union{ Nothing, RunObjectRequiredAction }
    last_error = nothing # spec type: Union{ Nothing, RunObjectLastError }
    expires_at::Union{Nothing, Int64} = nothing
    started_at::Union{Nothing, Int64} = nothing
    cancelled_at::Union{Nothing, Int64} = nothing
    failed_at::Union{Nothing, Int64} = nothing
    completed_at::Union{Nothing, Int64} = nothing
    model::Union{Nothing, String} = nothing
    instructions::Union{Nothing, String} = nothing
    tools::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AssistantObjectToolsInner} }
    file_ids::Union{Nothing, Vector{String}} = nothing
    metadata::Union{Nothing, Any} = nothing

    function RunObject(id, object, created_at, thread_id, assistant_id, status, required_action, last_error, expires_at, started_at, cancelled_at, failed_at, completed_at, model, instructions, tools, file_ids, metadata, )
        OpenAPI.validate_property(RunObject, Symbol("id"), id)
        OpenAPI.validate_property(RunObject, Symbol("object"), object)
        OpenAPI.validate_property(RunObject, Symbol("created_at"), created_at)
        OpenAPI.validate_property(RunObject, Symbol("thread_id"), thread_id)
        OpenAPI.validate_property(RunObject, Symbol("assistant_id"), assistant_id)
        OpenAPI.validate_property(RunObject, Symbol("status"), status)
        OpenAPI.validate_property(RunObject, Symbol("required_action"), required_action)
        OpenAPI.validate_property(RunObject, Symbol("last_error"), last_error)
        OpenAPI.validate_property(RunObject, Symbol("expires_at"), expires_at)
        OpenAPI.validate_property(RunObject, Symbol("started_at"), started_at)
        OpenAPI.validate_property(RunObject, Symbol("cancelled_at"), cancelled_at)
        OpenAPI.validate_property(RunObject, Symbol("failed_at"), failed_at)
        OpenAPI.validate_property(RunObject, Symbol("completed_at"), completed_at)
        OpenAPI.validate_property(RunObject, Symbol("model"), model)
        OpenAPI.validate_property(RunObject, Symbol("instructions"), instructions)
        OpenAPI.validate_property(RunObject, Symbol("tools"), tools)
        OpenAPI.validate_property(RunObject, Symbol("file_ids"), file_ids)
        OpenAPI.validate_property(RunObject, Symbol("metadata"), metadata)
        return new(id, object, created_at, thread_id, assistant_id, status, required_action, last_error, expires_at, started_at, cancelled_at, failed_at, completed_at, model, instructions, tools, file_ids, metadata, )
    end
end # type RunObject

const _property_types_RunObject = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("object")=>"String", Symbol("created_at")=>"Int64", Symbol("thread_id")=>"String", Symbol("assistant_id")=>"String", Symbol("status")=>"String", Symbol("required_action")=>"RunObjectRequiredAction", Symbol("last_error")=>"RunObjectLastError", Symbol("expires_at")=>"Int64", Symbol("started_at")=>"Int64", Symbol("cancelled_at")=>"Int64", Symbol("failed_at")=>"Int64", Symbol("completed_at")=>"Int64", Symbol("model")=>"String", Symbol("instructions")=>"String", Symbol("tools")=>"Vector{AssistantObjectToolsInner}", Symbol("file_ids")=>"Vector{String}", Symbol("metadata")=>"Any", )
OpenAPI.property_type(::Type{ RunObject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RunObject[name]))}

function check_required(o::RunObject)
    o.id === nothing && (return false)
    o.object === nothing && (return false)
    o.created_at === nothing && (return false)
    o.thread_id === nothing && (return false)
    o.assistant_id === nothing && (return false)
    o.status === nothing && (return false)
    o.required_action === nothing && (return false)
    o.last_error === nothing && (return false)
    o.expires_at === nothing && (return false)
    o.started_at === nothing && (return false)
    o.cancelled_at === nothing && (return false)
    o.failed_at === nothing && (return false)
    o.completed_at === nothing && (return false)
    o.model === nothing && (return false)
    o.instructions === nothing && (return false)
    o.tools === nothing && (return false)
    o.file_ids === nothing && (return false)
    o.metadata === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RunObject }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "RunObject", :enum, val, ["thread.run"])
    end
    if name === Symbol("status")
        OpenAPI.validate_param(name, "RunObject", :enum, val, ["queued", "in_progress", "requires_action", "cancelling", "cancelled", "failed", "completed", "expired"])
    end
    if name === Symbol("tools")
        OpenAPI.validate_param(name, "RunObject", :maxItems, val, 20)
    end
end
