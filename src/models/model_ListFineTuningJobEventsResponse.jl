# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ListFineTuningJobEventsResponse

    ListFineTuningJobEventsResponse(;
        data=nothing,
        object=nothing,
    )

    - data::Vector{FineTuningJobEvent}
    - object::String
"""
Base.@kwdef mutable struct ListFineTuningJobEventsResponse <: OpenAPI.APIModel
    data::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FineTuningJobEvent} }
    object::Union{Nothing, String} = nothing

    function ListFineTuningJobEventsResponse(data, object, )
        OpenAPI.validate_property(ListFineTuningJobEventsResponse, Symbol("data"), data)
        OpenAPI.validate_property(ListFineTuningJobEventsResponse, Symbol("object"), object)
        return new(data, object, )
    end
end # type ListFineTuningJobEventsResponse

const _property_types_ListFineTuningJobEventsResponse = Dict{Symbol,String}(Symbol("data")=>"Vector{FineTuningJobEvent}", Symbol("object")=>"String", )
OpenAPI.property_type(::Type{ ListFineTuningJobEventsResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListFineTuningJobEventsResponse[name]))}

function check_required(o::ListFineTuningJobEventsResponse)
    o.data === nothing && (return false)
    o.object === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ListFineTuningJobEventsResponse }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "ListFineTuningJobEventsResponse", :enum, val, ["list"])
    end
end
