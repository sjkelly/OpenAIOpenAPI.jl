# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeleteFileResponse

    DeleteFileResponse(;
        id=nothing,
        object=nothing,
        deleted=nothing,
    )

    - id::String
    - object::String
    - deleted::Bool
"""
Base.@kwdef mutable struct DeleteFileResponse <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    object::Union{Nothing, String} = nothing
    deleted::Union{Nothing, Bool} = nothing

    function DeleteFileResponse(id, object, deleted, )
        OpenAPI.validate_property(DeleteFileResponse, Symbol("id"), id)
        OpenAPI.validate_property(DeleteFileResponse, Symbol("object"), object)
        OpenAPI.validate_property(DeleteFileResponse, Symbol("deleted"), deleted)
        return new(id, object, deleted, )
    end
end # type DeleteFileResponse

const _property_types_DeleteFileResponse = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("object")=>"String", Symbol("deleted")=>"Bool", )
OpenAPI.property_type(::Type{ DeleteFileResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeleteFileResponse[name]))}

function check_required(o::DeleteFileResponse)
    o.id === nothing && (return false)
    o.object === nothing && (return false)
    o.deleted === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DeleteFileResponse }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "DeleteFileResponse", :enum, val, ["file"])
    end
end
