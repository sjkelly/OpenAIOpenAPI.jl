# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateModerationResponse_results_inner

    CreateModerationResponseResultsInner(;
        flagged=nothing,
        categories=nothing,
        category_scores=nothing,
    )

    - flagged::Bool : Whether the content violates [OpenAI&#39;s usage policies](/policies/usage-policies).
    - categories::CreateModerationResponseResultsInnerCategories
    - category_scores::CreateModerationResponseResultsInnerCategoryScores
"""
Base.@kwdef mutable struct CreateModerationResponseResultsInner <: OpenAPI.APIModel
    flagged::Union{Nothing, Bool} = nothing
    categories = nothing # spec type: Union{ Nothing, CreateModerationResponseResultsInnerCategories }
    category_scores = nothing # spec type: Union{ Nothing, CreateModerationResponseResultsInnerCategoryScores }

    function CreateModerationResponseResultsInner(flagged, categories, category_scores, )
        OpenAPI.validate_property(CreateModerationResponseResultsInner, Symbol("flagged"), flagged)
        OpenAPI.validate_property(CreateModerationResponseResultsInner, Symbol("categories"), categories)
        OpenAPI.validate_property(CreateModerationResponseResultsInner, Symbol("category_scores"), category_scores)
        return new(flagged, categories, category_scores, )
    end
end # type CreateModerationResponseResultsInner

const _property_types_CreateModerationResponseResultsInner = Dict{Symbol,String}(Symbol("flagged")=>"Bool", Symbol("categories")=>"CreateModerationResponseResultsInnerCategories", Symbol("category_scores")=>"CreateModerationResponseResultsInnerCategoryScores", )
OpenAPI.property_type(::Type{ CreateModerationResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateModerationResponseResultsInner[name]))}

function check_required(o::CreateModerationResponseResultsInner)
    o.flagged === nothing && (return false)
    o.categories === nothing && (return false)
    o.category_scores === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateModerationResponseResultsInner }, name::Symbol, val)
end
