# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ImagesResponse

    ImagesResponse(;
        created=nothing,
        data=nothing,
    )

    - created::Int64
    - data::Vector{Image}
"""
Base.@kwdef mutable struct ImagesResponse <: OpenAPI.APIModel
    created::Union{Nothing, Int64} = nothing
    data::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Image} }

    function ImagesResponse(created, data, )
        OpenAPI.validate_property(ImagesResponse, Symbol("created"), created)
        OpenAPI.validate_property(ImagesResponse, Symbol("data"), data)
        return new(created, data, )
    end
end # type ImagesResponse

const _property_types_ImagesResponse = Dict{Symbol,String}(Symbol("created")=>"Int64", Symbol("data")=>"Vector{Image}", )
OpenAPI.property_type(::Type{ ImagesResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ImagesResponse[name]))}

function check_required(o::ImagesResponse)
    o.created === nothing && (return false)
    o.data === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ImagesResponse }, name::Symbol, val)
end
