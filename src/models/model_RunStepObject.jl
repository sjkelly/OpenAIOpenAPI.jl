# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RunStepObject
Represents a step in execution of a run. 

    RunStepObject(;
        id=nothing,
        object=nothing,
        created_at=nothing,
        assistant_id=nothing,
        thread_id=nothing,
        run_id=nothing,
        type=nothing,
        status=nothing,
        step_details=nothing,
        last_error=nothing,
        expired_at=nothing,
        cancelled_at=nothing,
        failed_at=nothing,
        completed_at=nothing,
        metadata=nothing,
    )

    - id::String : The identifier of the run step, which can be referenced in API endpoints.
    - object::String : The object type, which is always &#x60;thread.run.step&#x60;&#x60;.
    - created_at::Int64 : The Unix timestamp (in seconds) for when the run step was created.
    - assistant_id::String : The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
    - thread_id::String : The ID of the [thread](/docs/api-reference/threads) that was run.
    - run_id::String : The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
    - type::String : The type of run step, which can be either &#x60;message_creation&#x60; or &#x60;tool_calls&#x60;.
    - status::String : The status of the run step, which can be either &#x60;in_progress&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;.
    - step_details::RunStepObjectStepDetails
    - last_error::RunStepObjectLastError
    - expired_at::Int64 : The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
    - cancelled_at::Int64 : The Unix timestamp (in seconds) for when the run step was cancelled.
    - failed_at::Int64 : The Unix timestamp (in seconds) for when the run step failed.
    - completed_at::Int64 : The Unix timestamp (in seconds) for when the run step completed.
    - metadata::Any : Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
"""
Base.@kwdef mutable struct RunStepObject <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    object::Union{Nothing, String} = nothing
    created_at::Union{Nothing, Int64} = nothing
    assistant_id::Union{Nothing, String} = nothing
    thread_id::Union{Nothing, String} = nothing
    run_id::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    step_details = nothing # spec type: Union{ Nothing, RunStepObjectStepDetails }
    last_error = nothing # spec type: Union{ Nothing, RunStepObjectLastError }
    expired_at::Union{Nothing, Int64} = nothing
    cancelled_at::Union{Nothing, Int64} = nothing
    failed_at::Union{Nothing, Int64} = nothing
    completed_at::Union{Nothing, Int64} = nothing
    metadata::Union{Nothing, Any} = nothing

    function RunStepObject(id, object, created_at, assistant_id, thread_id, run_id, type, status, step_details, last_error, expired_at, cancelled_at, failed_at, completed_at, metadata, )
        OpenAPI.validate_property(RunStepObject, Symbol("id"), id)
        OpenAPI.validate_property(RunStepObject, Symbol("object"), object)
        OpenAPI.validate_property(RunStepObject, Symbol("created_at"), created_at)
        OpenAPI.validate_property(RunStepObject, Symbol("assistant_id"), assistant_id)
        OpenAPI.validate_property(RunStepObject, Symbol("thread_id"), thread_id)
        OpenAPI.validate_property(RunStepObject, Symbol("run_id"), run_id)
        OpenAPI.validate_property(RunStepObject, Symbol("type"), type)
        OpenAPI.validate_property(RunStepObject, Symbol("status"), status)
        OpenAPI.validate_property(RunStepObject, Symbol("step_details"), step_details)
        OpenAPI.validate_property(RunStepObject, Symbol("last_error"), last_error)
        OpenAPI.validate_property(RunStepObject, Symbol("expired_at"), expired_at)
        OpenAPI.validate_property(RunStepObject, Symbol("cancelled_at"), cancelled_at)
        OpenAPI.validate_property(RunStepObject, Symbol("failed_at"), failed_at)
        OpenAPI.validate_property(RunStepObject, Symbol("completed_at"), completed_at)
        OpenAPI.validate_property(RunStepObject, Symbol("metadata"), metadata)
        return new(id, object, created_at, assistant_id, thread_id, run_id, type, status, step_details, last_error, expired_at, cancelled_at, failed_at, completed_at, metadata, )
    end
end # type RunStepObject

const _property_types_RunStepObject = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("object")=>"String", Symbol("created_at")=>"Int64", Symbol("assistant_id")=>"String", Symbol("thread_id")=>"String", Symbol("run_id")=>"String", Symbol("type")=>"String", Symbol("status")=>"String", Symbol("step_details")=>"RunStepObjectStepDetails", Symbol("last_error")=>"RunStepObjectLastError", Symbol("expired_at")=>"Int64", Symbol("cancelled_at")=>"Int64", Symbol("failed_at")=>"Int64", Symbol("completed_at")=>"Int64", Symbol("metadata")=>"Any", )
OpenAPI.property_type(::Type{ RunStepObject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RunStepObject[name]))}

function check_required(o::RunStepObject)
    o.id === nothing && (return false)
    o.object === nothing && (return false)
    o.created_at === nothing && (return false)
    o.assistant_id === nothing && (return false)
    o.thread_id === nothing && (return false)
    o.run_id === nothing && (return false)
    o.type === nothing && (return false)
    o.status === nothing && (return false)
    o.step_details === nothing && (return false)
    o.last_error === nothing && (return false)
    o.expired_at === nothing && (return false)
    o.cancelled_at === nothing && (return false)
    o.failed_at === nothing && (return false)
    o.completed_at === nothing && (return false)
    o.metadata === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RunStepObject }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "RunStepObject", :enum, val, ["thread.run.step"])
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "RunStepObject", :enum, val, ["message_creation", "tool_calls"])
    end
    if name === Symbol("status")
        OpenAPI.validate_param(name, "RunStepObject", :enum, val, ["in_progress", "cancelled", "failed", "completed", "expired"])
    end
end
