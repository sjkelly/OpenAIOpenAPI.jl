# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateModerationResponse
Represents policy compliance report by OpenAI&#39;s content moderation model against a given input.

    CreateModerationResponse(;
        id=nothing,
        model=nothing,
        results=nothing,
    )

    - id::String : The unique identifier for the moderation request.
    - model::String : The model used to generate the moderation results.
    - results::Vector{CreateModerationResponseResultsInner} : A list of moderation objects.
"""
Base.@kwdef mutable struct CreateModerationResponse <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    model::Union{Nothing, String} = nothing
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CreateModerationResponseResultsInner} }

    function CreateModerationResponse(id, model, results, )
        OpenAPI.validate_property(CreateModerationResponse, Symbol("id"), id)
        OpenAPI.validate_property(CreateModerationResponse, Symbol("model"), model)
        OpenAPI.validate_property(CreateModerationResponse, Symbol("results"), results)
        return new(id, model, results, )
    end
end # type CreateModerationResponse

const _property_types_CreateModerationResponse = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("model")=>"String", Symbol("results")=>"Vector{CreateModerationResponseResultsInner}", )
OpenAPI.property_type(::Type{ CreateModerationResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateModerationResponse[name]))}

function check_required(o::CreateModerationResponse)
    o.id === nothing && (return false)
    o.model === nothing && (return false)
    o.results === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateModerationResponse }, name::Symbol, val)
end
