# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ChatCompletionRequestMessageContentPartImage_image_url

    ChatCompletionRequestMessageContentPartImageImageUrl(;
        url=nothing,
        detail="auto",
    )

    - url::String : Either a URL of the image or the base64 encoded image data.
    - detail::String : Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
"""
Base.@kwdef mutable struct ChatCompletionRequestMessageContentPartImageImageUrl <: OpenAPI.APIModel
    url::Union{Nothing, String} = nothing
    detail::Union{Nothing, String} = "auto"

    function ChatCompletionRequestMessageContentPartImageImageUrl(url, detail, )
        OpenAPI.validate_property(ChatCompletionRequestMessageContentPartImageImageUrl, Symbol("url"), url)
        OpenAPI.validate_property(ChatCompletionRequestMessageContentPartImageImageUrl, Symbol("detail"), detail)
        return new(url, detail, )
    end
end # type ChatCompletionRequestMessageContentPartImageImageUrl

const _property_types_ChatCompletionRequestMessageContentPartImageImageUrl = Dict{Symbol,String}(Symbol("url")=>"String", Symbol("detail")=>"String", )
OpenAPI.property_type(::Type{ ChatCompletionRequestMessageContentPartImageImageUrl }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ChatCompletionRequestMessageContentPartImageImageUrl[name]))}

function check_required(o::ChatCompletionRequestMessageContentPartImageImageUrl)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ChatCompletionRequestMessageContentPartImageImageUrl }, name::Symbol, val)
    if name === Symbol("url")
        OpenAPI.validate_param(name, "ChatCompletionRequestMessageContentPartImageImageUrl", :format, val, "uri")
    end
    if name === Symbol("detail")
        OpenAPI.validate_param(name, "ChatCompletionRequestMessageContentPartImageImageUrl", :enum, val, ["auto", "low", "high"])
    end
end
