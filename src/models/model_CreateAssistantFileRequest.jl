# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateAssistantFileRequest

    CreateAssistantFileRequest(;
        file_id=nothing,
    )

    - file_id::String : A [File](/docs/api-reference/files) ID (with &#x60;purpose&#x3D;\&quot;assistants\&quot;&#x60;) that the assistant should use. Useful for tools like &#x60;retrieval&#x60; and &#x60;code_interpreter&#x60; that can access files.
"""
Base.@kwdef mutable struct CreateAssistantFileRequest <: OpenAPI.APIModel
    file_id::Union{Nothing, String} = nothing

    function CreateAssistantFileRequest(file_id, )
        OpenAPI.validate_property(CreateAssistantFileRequest, Symbol("file_id"), file_id)
        return new(file_id, )
    end
end # type CreateAssistantFileRequest

const _property_types_CreateAssistantFileRequest = Dict{Symbol,String}(Symbol("file_id")=>"String", )
OpenAPI.property_type(::Type{ CreateAssistantFileRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateAssistantFileRequest[name]))}

function check_required(o::CreateAssistantFileRequest)
    o.file_id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateAssistantFileRequest }, name::Symbol, val)
end
