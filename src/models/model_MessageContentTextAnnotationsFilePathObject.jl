# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MessageContentTextAnnotationsFilePathObject
A URL for the file that&#39;s generated when the assistant used the &#x60;code_interpreter&#x60; tool to generate a file.

    MessageContentTextAnnotationsFilePathObject(;
        type=nothing,
        text=nothing,
        file_path=nothing,
        start_index=nothing,
        end_index=nothing,
    )

    - type::String : Always &#x60;file_path&#x60;.
    - text::String : The text in the message content that needs to be replaced.
    - file_path::MessageContentTextAnnotationsFilePathObjectFilePath
    - start_index::Int64
    - end_index::Int64
"""
Base.@kwdef mutable struct MessageContentTextAnnotationsFilePathObject <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    text::Union{Nothing, String} = nothing
    file_path = nothing # spec type: Union{ Nothing, MessageContentTextAnnotationsFilePathObjectFilePath }
    start_index::Union{Nothing, Int64} = nothing
    end_index::Union{Nothing, Int64} = nothing

    function MessageContentTextAnnotationsFilePathObject(type, text, file_path, start_index, end_index, )
        OpenAPI.validate_property(MessageContentTextAnnotationsFilePathObject, Symbol("type"), type)
        OpenAPI.validate_property(MessageContentTextAnnotationsFilePathObject, Symbol("text"), text)
        OpenAPI.validate_property(MessageContentTextAnnotationsFilePathObject, Symbol("file_path"), file_path)
        OpenAPI.validate_property(MessageContentTextAnnotationsFilePathObject, Symbol("start_index"), start_index)
        OpenAPI.validate_property(MessageContentTextAnnotationsFilePathObject, Symbol("end_index"), end_index)
        return new(type, text, file_path, start_index, end_index, )
    end
end # type MessageContentTextAnnotationsFilePathObject

const _property_types_MessageContentTextAnnotationsFilePathObject = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("text")=>"String", Symbol("file_path")=>"MessageContentTextAnnotationsFilePathObjectFilePath", Symbol("start_index")=>"Int64", Symbol("end_index")=>"Int64", )
OpenAPI.property_type(::Type{ MessageContentTextAnnotationsFilePathObject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MessageContentTextAnnotationsFilePathObject[name]))}

function check_required(o::MessageContentTextAnnotationsFilePathObject)
    o.type === nothing && (return false)
    o.text === nothing && (return false)
    o.file_path === nothing && (return false)
    o.start_index === nothing && (return false)
    o.end_index === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MessageContentTextAnnotationsFilePathObject }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "MessageContentTextAnnotationsFilePathObject", :enum, val, ["file_path"])
    end
    if name === Symbol("start_index")
        OpenAPI.validate_param(name, "MessageContentTextAnnotationsFilePathObject", :minimum, val, 0, false)
    end
    if name === Symbol("end_index")
        OpenAPI.validate_param(name, "MessageContentTextAnnotationsFilePathObject", :minimum, val, 0, false)
    end
end
