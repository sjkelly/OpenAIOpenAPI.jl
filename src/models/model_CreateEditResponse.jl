# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateEditResponse

    CreateEditResponse(;
        choices=nothing,
        object=nothing,
        created=nothing,
        usage=nothing,
    )

    - choices::Vector{CreateEditResponseChoicesInner} : A list of edit choices. Can be more than one if &#x60;n&#x60; is greater than 1.
    - object::String : The object type, which is always &#x60;edit&#x60;.
    - created::Int64 : The Unix timestamp (in seconds) of when the edit was created.
    - usage::CompletionUsage
"""
Base.@kwdef mutable struct CreateEditResponse <: OpenAPI.APIModel
    choices::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CreateEditResponseChoicesInner} }
    object::Union{Nothing, String} = nothing
    created::Union{Nothing, Int64} = nothing
    usage = nothing # spec type: Union{ Nothing, CompletionUsage }

    function CreateEditResponse(choices, object, created, usage, )
        OpenAPI.validate_property(CreateEditResponse, Symbol("choices"), choices)
        OpenAPI.validate_property(CreateEditResponse, Symbol("object"), object)
        OpenAPI.validate_property(CreateEditResponse, Symbol("created"), created)
        OpenAPI.validate_property(CreateEditResponse, Symbol("usage"), usage)
        return new(choices, object, created, usage, )
    end
end # type CreateEditResponse

const _property_types_CreateEditResponse = Dict{Symbol,String}(Symbol("choices")=>"Vector{CreateEditResponseChoicesInner}", Symbol("object")=>"String", Symbol("created")=>"Int64", Symbol("usage")=>"CompletionUsage", )
OpenAPI.property_type(::Type{ CreateEditResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateEditResponse[name]))}

function check_required(o::CreateEditResponse)
    o.choices === nothing && (return false)
    o.object === nothing && (return false)
    o.created === nothing && (return false)
    o.usage === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateEditResponse }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "CreateEditResponse", :enum, val, ["edit"])
    end
end
