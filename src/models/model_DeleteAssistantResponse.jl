# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeleteAssistantResponse

    DeleteAssistantResponse(;
        id=nothing,
        deleted=nothing,
        object=nothing,
    )

    - id::String
    - deleted::Bool
    - object::String
"""
Base.@kwdef mutable struct DeleteAssistantResponse <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    deleted::Union{Nothing, Bool} = nothing
    object::Union{Nothing, String} = nothing

    function DeleteAssistantResponse(id, deleted, object, )
        OpenAPI.validate_property(DeleteAssistantResponse, Symbol("id"), id)
        OpenAPI.validate_property(DeleteAssistantResponse, Symbol("deleted"), deleted)
        OpenAPI.validate_property(DeleteAssistantResponse, Symbol("object"), object)
        return new(id, deleted, object, )
    end
end # type DeleteAssistantResponse

const _property_types_DeleteAssistantResponse = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("deleted")=>"Bool", Symbol("object")=>"String", )
OpenAPI.property_type(::Type{ DeleteAssistantResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeleteAssistantResponse[name]))}

function check_required(o::DeleteAssistantResponse)
    o.id === nothing && (return false)
    o.deleted === nothing && (return false)
    o.object === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DeleteAssistantResponse }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "DeleteAssistantResponse", :enum, val, ["assistant.deleted"])
    end
end
