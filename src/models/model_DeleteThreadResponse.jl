# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeleteThreadResponse

    DeleteThreadResponse(;
        id=nothing,
        deleted=nothing,
        object=nothing,
    )

    - id::String
    - deleted::Bool
    - object::String
"""
Base.@kwdef mutable struct DeleteThreadResponse <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    deleted::Union{Nothing, Bool} = nothing
    object::Union{Nothing, String} = nothing

    function DeleteThreadResponse(id, deleted, object, )
        OpenAPI.validate_property(DeleteThreadResponse, Symbol("id"), id)
        OpenAPI.validate_property(DeleteThreadResponse, Symbol("deleted"), deleted)
        OpenAPI.validate_property(DeleteThreadResponse, Symbol("object"), object)
        return new(id, deleted, object, )
    end
end # type DeleteThreadResponse

const _property_types_DeleteThreadResponse = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("deleted")=>"Bool", Symbol("object")=>"String", )
OpenAPI.property_type(::Type{ DeleteThreadResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeleteThreadResponse[name]))}

function check_required(o::DeleteThreadResponse)
    o.id === nothing && (return false)
    o.deleted === nothing && (return false)
    o.object === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DeleteThreadResponse }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "DeleteThreadResponse", :enum, val, ["thread.deleted"])
    end
end
