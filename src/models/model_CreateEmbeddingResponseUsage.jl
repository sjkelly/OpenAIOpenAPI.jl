# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateEmbeddingResponse_usage
The usage information for the request.

    CreateEmbeddingResponseUsage(;
        prompt_tokens=nothing,
        total_tokens=nothing,
    )

    - prompt_tokens::Int64 : The number of tokens used by the prompt.
    - total_tokens::Int64 : The total number of tokens used by the request.
"""
Base.@kwdef mutable struct CreateEmbeddingResponseUsage <: OpenAPI.APIModel
    prompt_tokens::Union{Nothing, Int64} = nothing
    total_tokens::Union{Nothing, Int64} = nothing

    function CreateEmbeddingResponseUsage(prompt_tokens, total_tokens, )
        OpenAPI.validate_property(CreateEmbeddingResponseUsage, Symbol("prompt_tokens"), prompt_tokens)
        OpenAPI.validate_property(CreateEmbeddingResponseUsage, Symbol("total_tokens"), total_tokens)
        return new(prompt_tokens, total_tokens, )
    end
end # type CreateEmbeddingResponseUsage

const _property_types_CreateEmbeddingResponseUsage = Dict{Symbol,String}(Symbol("prompt_tokens")=>"Int64", Symbol("total_tokens")=>"Int64", )
OpenAPI.property_type(::Type{ CreateEmbeddingResponseUsage }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateEmbeddingResponseUsage[name]))}

function check_required(o::CreateEmbeddingResponseUsage)
    o.prompt_tokens === nothing && (return false)
    o.total_tokens === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateEmbeddingResponseUsage }, name::Symbol, val)
end
