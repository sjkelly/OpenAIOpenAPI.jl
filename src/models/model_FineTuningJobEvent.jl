# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FineTuningJobEvent
Fine-tuning job event object

    FineTuningJobEvent(;
        id=nothing,
        created_at=nothing,
        level=nothing,
        message=nothing,
        object=nothing,
    )

    - id::String
    - created_at::Int64
    - level::String
    - message::String
    - object::String
"""
Base.@kwdef mutable struct FineTuningJobEvent <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    created_at::Union{Nothing, Int64} = nothing
    level::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    object::Union{Nothing, String} = nothing

    function FineTuningJobEvent(id, created_at, level, message, object, )
        OpenAPI.validate_property(FineTuningJobEvent, Symbol("id"), id)
        OpenAPI.validate_property(FineTuningJobEvent, Symbol("created_at"), created_at)
        OpenAPI.validate_property(FineTuningJobEvent, Symbol("level"), level)
        OpenAPI.validate_property(FineTuningJobEvent, Symbol("message"), message)
        OpenAPI.validate_property(FineTuningJobEvent, Symbol("object"), object)
        return new(id, created_at, level, message, object, )
    end
end # type FineTuningJobEvent

const _property_types_FineTuningJobEvent = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("created_at")=>"Int64", Symbol("level")=>"String", Symbol("message")=>"String", Symbol("object")=>"String", )
OpenAPI.property_type(::Type{ FineTuningJobEvent }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FineTuningJobEvent[name]))}

function check_required(o::FineTuningJobEvent)
    o.id === nothing && (return false)
    o.created_at === nothing && (return false)
    o.level === nothing && (return false)
    o.message === nothing && (return false)
    o.object === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FineTuningJobEvent }, name::Symbol, val)
    if name === Symbol("level")
        OpenAPI.validate_param(name, "FineTuningJobEvent", :enum, val, ["info", "warn", "error"])
    end
    if name === Symbol("object")
        OpenAPI.validate_param(name, "FineTuningJobEvent", :enum, val, ["fine_tuning.job.event"])
    end
end
