# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MessageContentTextObject
The text content that is part of a message.

    MessageContentTextObject(;
        type=nothing,
        text=nothing,
    )

    - type::String : Always &#x60;text&#x60;.
    - text::MessageContentTextObjectText
"""
Base.@kwdef mutable struct MessageContentTextObject <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    text = nothing # spec type: Union{ Nothing, MessageContentTextObjectText }

    function MessageContentTextObject(type, text, )
        OpenAPI.validate_property(MessageContentTextObject, Symbol("type"), type)
        OpenAPI.validate_property(MessageContentTextObject, Symbol("text"), text)
        return new(type, text, )
    end
end # type MessageContentTextObject

const _property_types_MessageContentTextObject = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("text")=>"MessageContentTextObjectText", )
OpenAPI.property_type(::Type{ MessageContentTextObject }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MessageContentTextObject[name]))}

function check_required(o::MessageContentTextObject)
    o.type === nothing && (return false)
    o.text === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MessageContentTextObject }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "MessageContentTextObject", :enum, val, ["text"])
    end
end
