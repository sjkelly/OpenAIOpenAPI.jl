# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ListModelsResponse

    ListModelsResponse(;
        object=nothing,
        data=nothing,
    )

    - object::String
    - data::Vector{Model}
"""
Base.@kwdef mutable struct ListModelsResponse <: OpenAPI.APIModel
    object::Union{Nothing, String} = nothing
    data::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Model} }

    function ListModelsResponse(object, data, )
        OpenAPI.validate_property(ListModelsResponse, Symbol("object"), object)
        OpenAPI.validate_property(ListModelsResponse, Symbol("data"), data)
        return new(object, data, )
    end
end # type ListModelsResponse

const _property_types_ListModelsResponse = Dict{Symbol,String}(Symbol("object")=>"String", Symbol("data")=>"Vector{Model}", )
OpenAPI.property_type(::Type{ ListModelsResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListModelsResponse[name]))}

function check_required(o::ListModelsResponse)
    o.object === nothing && (return false)
    o.data === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ListModelsResponse }, name::Symbol, val)
    if name === Symbol("object")
        OpenAPI.validate_param(name, "ListModelsResponse", :enum, val, ["list"])
    end
end
