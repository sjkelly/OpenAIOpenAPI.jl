# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct EmbeddingsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `EmbeddingsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ EmbeddingsApi }) = "https://api.openai.com/v1"

const _returntypes_create_embedding_EmbeddingsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CreateEmbeddingResponse,
)

function _oacinternal_create_embedding(_api::EmbeddingsApi, create_embedding_request::CreateEmbeddingRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_embedding_EmbeddingsApi, "/embeddings", ["ApiKeyAuth", ], create_embedding_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates an embedding vector representing the input text.

Params:
- create_embedding_request::CreateEmbeddingRequest (required)

Return: CreateEmbeddingResponse, OpenAPI.Clients.ApiResponse
"""
function create_embedding(_api::EmbeddingsApi, create_embedding_request::CreateEmbeddingRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_embedding(_api, create_embedding_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_embedding(_api::EmbeddingsApi, response_stream::Channel, create_embedding_request::CreateEmbeddingRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_embedding(_api, create_embedding_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_embedding
