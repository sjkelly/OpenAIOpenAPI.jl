# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct CompletionsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `CompletionsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ CompletionsApi }) = "https://api.openai.com/v1"

const _returntypes_create_completion_CompletionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CreateCompletionResponse,
)

function _oacinternal_create_completion(_api::CompletionsApi, create_completion_request::CreateCompletionRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_completion_CompletionsApi, "/completions", ["ApiKeyAuth", ], create_completion_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates a completion for the provided prompt and parameters.

Params:
- create_completion_request::CreateCompletionRequest (required)

Return: CreateCompletionResponse, OpenAPI.Clients.ApiResponse
"""
function create_completion(_api::CompletionsApi, create_completion_request::CreateCompletionRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_completion(_api, create_completion_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_completion(_api::CompletionsApi, response_stream::Channel, create_completion_request::CreateCompletionRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_completion(_api, create_completion_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_completion
