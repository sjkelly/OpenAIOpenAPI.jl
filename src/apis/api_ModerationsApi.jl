# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ModerationsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ModerationsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ModerationsApi }) = "https://api.openai.com/v1"

const _returntypes_create_moderation_ModerationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CreateModerationResponse,
)

function _oacinternal_create_moderation(_api::ModerationsApi, create_moderation_request::CreateModerationRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_moderation_ModerationsApi, "/moderations", ["ApiKeyAuth", ], create_moderation_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Classifies if text violates OpenAI's Content Policy

Params:
- create_moderation_request::CreateModerationRequest (required)

Return: CreateModerationResponse, OpenAPI.Clients.ApiResponse
"""
function create_moderation(_api::ModerationsApi, create_moderation_request::CreateModerationRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_moderation(_api, create_moderation_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_moderation(_api::ModerationsApi, response_stream::Channel, create_moderation_request::CreateModerationRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_moderation(_api, create_moderation_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_moderation
