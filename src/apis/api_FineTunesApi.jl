# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct FineTunesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `FineTunesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ FineTunesApi }) = "https://api.openai.com/v1"

const _returntypes_cancel_fine_tune_FineTunesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => FineTune,
)

function _oacinternal_cancel_fine_tune(_api::FineTunesApi, fine_tune_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_cancel_fine_tune_FineTunesApi, "/fine-tunes/{fine_tune_id}/cancel", ["ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "fine_tune_id", fine_tune_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Immediately cancel a fine-tune job. 

Params:
- fine_tune_id::String (required)

Return: FineTune, OpenAPI.Clients.ApiResponse
"""
function cancel_fine_tune(_api::FineTunesApi, fine_tune_id::String; _mediaType=nothing)
    _ctx = _oacinternal_cancel_fine_tune(_api, fine_tune_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function cancel_fine_tune(_api::FineTunesApi, response_stream::Channel, fine_tune_id::String; _mediaType=nothing)
    _ctx = _oacinternal_cancel_fine_tune(_api, fine_tune_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_fine_tune_FineTunesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => FineTune,
)

function _oacinternal_create_fine_tune(_api::FineTunesApi, create_fine_tune_request::CreateFineTuneRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_fine_tune_FineTunesApi, "/fine-tunes", ["ApiKeyAuth", ], create_fine_tune_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/legacy-fine-tuning) 

Params:
- create_fine_tune_request::CreateFineTuneRequest (required)

Return: FineTune, OpenAPI.Clients.ApiResponse
"""
function create_fine_tune(_api::FineTunesApi, create_fine_tune_request::CreateFineTuneRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_fine_tune(_api, create_fine_tune_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_fine_tune(_api::FineTunesApi, response_stream::Channel, create_fine_tune_request::CreateFineTuneRequest; _mediaType=nothing)
    _ctx = _oacinternal_create_fine_tune(_api, create_fine_tune_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_fine_tune_events_FineTunesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ListFineTuneEventsResponse,
)

function _oacinternal_list_fine_tune_events(_api::FineTunesApi, fine_tune_id::String; stream=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_fine_tune_events_FineTunesApi, "/fine-tunes/{fine_tune_id}/events", ["ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "fine_tune_id", fine_tune_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "stream", stream)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get fine-grained status updates for a fine-tune job. 

Params:
- fine_tune_id::String (required)
- stream::Bool

Return: ListFineTuneEventsResponse, OpenAPI.Clients.ApiResponse
"""
function list_fine_tune_events(_api::FineTunesApi, fine_tune_id::String; stream=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_fine_tune_events(_api, fine_tune_id; stream=stream, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_fine_tune_events(_api::FineTunesApi, response_stream::Channel, fine_tune_id::String; stream=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_fine_tune_events(_api, fine_tune_id; stream=stream, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_fine_tunes_FineTunesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ListFineTunesResponse,
)

function _oacinternal_list_fine_tunes(_api::FineTunesApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_fine_tunes_FineTunesApi, "/fine-tunes", ["ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List your organization's fine-tuning jobs 

Params:

Return: ListFineTunesResponse, OpenAPI.Clients.ApiResponse
"""
function list_fine_tunes(_api::FineTunesApi; _mediaType=nothing)
    _ctx = _oacinternal_list_fine_tunes(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_fine_tunes(_api::FineTunesApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_list_fine_tunes(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_retrieve_fine_tune_FineTunesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => FineTune,
)

function _oacinternal_retrieve_fine_tune(_api::FineTunesApi, fine_tune_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_retrieve_fine_tune_FineTunesApi, "/fine-tunes/{fine_tune_id}", ["ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "fine_tune_id", fine_tune_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets info about the fine-tune job.  [Learn more about fine-tuning](/docs/guides/legacy-fine-tuning) 

Params:
- fine_tune_id::String (required)

Return: FineTune, OpenAPI.Clients.ApiResponse
"""
function retrieve_fine_tune(_api::FineTunesApi, fine_tune_id::String; _mediaType=nothing)
    _ctx = _oacinternal_retrieve_fine_tune(_api, fine_tune_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function retrieve_fine_tune(_api::FineTunesApi, response_stream::Channel, fine_tune_id::String; _mediaType=nothing)
    _ctx = _oacinternal_retrieve_fine_tune(_api, fine_tune_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export cancel_fine_tune
export create_fine_tune
export list_fine_tune_events
export list_fine_tunes
export retrieve_fine_tune
